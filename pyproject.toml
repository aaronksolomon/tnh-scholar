# pyproject.toml
[build-system]
requires = ["setuptools>=42", "wheel", "build"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"}
packages = { find = { include = ["tnh_scholar*"] } }

[project]
name = "tnh-scholar"
version = "0.1.0"
description = """
TNH Scholar is an AI-driven project designed to explore, query, and translate 
the teachings of Thich Nhat Hanh. The project aims to create a resource for 
practitioners and scholars to deeply engage with mindfulness and spiritual 
wisdom through natural language processing and machine learning models.
"""
requires-python = ">=3.12.4"  # Specify minimum Python version
keywords = ["nlp", "buddhism", "translation", "ai"]  # Add relevant keywords
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3.12",
]
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "Aaron K. Solomon", email = "aaron.kyle.solomon@gmail.com" }]

dependencies = [
    "click==8.1.8",
    "colorlog==6.9.0",
    "GitPython==3.1.44",
    "Jinja2==3.1.5",
    "langchain_community==0.3.14",
    "langchain_openai==0.3.1",
    "langdetect==1.0.9",
    "lxml==5.3.0",
    "numpy==2.2.2",
    "openai==1.59.8",
    "openai_whisper==20240930",
    "packaging>=24.2,<25.0",
    "pycountry==24.6.1",
    "pydantic==2.10.5",
    "pydub==0.25.1",
    "python-dotenv>=1.0.1,<2.0.0",
    "PyYAML>=6.0.2,<7.0.0",
    "regex==2024.11.6",
    "Requests>=2.32.3,<3.0.0",
    "supabase==2.11.0",
    "tiktoken==0.8.0",
    "torch==2.5.1",
    "tqdm>=4.67.1,<5.0.0",
    "transformers==4.47.1",
    "yt_dlp>=2025.1.15"
]


[project.optional-dependencies]
gui= [
    "streamlit>=1.41.1"
]
query = [
    "beautifulsoup4==4.12.3",
    "spacy==3.8.3",
    "EbookLib==0.18"
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
    "ruff>=0.2.0",  
    "mkdocstrings-python>=1.13.0",
    "pipreqs>=8.31.0",
    "pre-commit>=3.5.0"
]
ocr = [
    "fitz==0.0.1.dev2",
    "Pillow==11.1.0",
    "google-cloud>=0.34.0",
    "google-cloud-vision>=3.9.0",
    "pdf2image==1.17.0"
]

[project.urls]
"Homepage" = "https://github.com/aaronksolomon/tnh-scholar"
"Bug Tracker" = "https://github.com/aaronksolomon/tnh-scholar/issues"
"Documentation" = "https://github.com/aaronksolomon/tnh-scholar/wiki"

[project.scripts]
audio-transcribe = "tnh_scholar.cli_tools.audio_transcribe.audio_transcribe:main"
tnh-fab = "tnh_scholar.cli_tools.tnh_fab.tnh_fab:main"
ytt-fetch = "tnh_scholar.cli_tools.ytt_fetch.ytt_fetch:main"
nfmt = "tnh_scholar.cli_tools.nfmt.nfmt:main"
token-count = "tnh_scholar.cli_tools.token_count.token_count:main"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-ra -q"
pythonpath = ["src"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
ignore_missing_imports = true  
strict = true  
plugins = ["pydantic.mypy"]  
[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false

[tool.coverage.run]
source = ["tnh_scholar"]
omit = ["tests/*", "**/__init__.py"]

[tool.ruff]
line-length = 88  # Match black
target-version = "py312"
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes
    "I",  # isort
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass"
]